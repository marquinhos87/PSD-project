/* -------------------------------------------------------------------------- */

syntax = "proto2";

package nefit;
option java_package = "nefit.shared";
option java_outer_classname = "NefitProto";

/* -------------------------------------------------------------------------- */
/* generic client <--> server */

enum ClientType {
    IMPORTER = 0;
    MANUFACTURER = 1;
}

message ClientToServer {
    oneof message {
        ClientToServerLogin login = 1;
        ClientToServerRegister register = 2;
    }
}

// request to login using existing account
// (each username is either an importer or a manufacturer)
message ClientToServerLogin {
    required string username = 1;
    required string password = 2;

    required ClientType clientType = 3;
}

// request to register a new account with the given type
message ClientToServerRegister {
    required string username = 1;
    required string password = 2;
}

// response to a login or register request
// (if ok is true, then clientType is present and errorMessage is not)
// (if ok is false, then errorMessage is present and clientType is not)
message ServerToClientAuth {
    required bool ok = 1;
    optional ClientType clientType = 2;
    optional string errorMessage = 3;
}

/* -------------------------------------------------------------------------- */
/* manufacturer client <--> server */

message ManufacturerToServer {
    oneof message {
        ManufacturerToServerAnnounce announce = 1;
    }
}

message ManufacturerToServerAnnounce {
    required string productName = 1;
    required int32 minQuantity = 2;
    required int32 maxQuantity = 3;
    required float minUnitPrice = 4;
    required int32 timeout = 5;
    required string manufacturerName = 6;
}

message ServerToManufacturer {
    oneof message {
        ServerToManufacturerAnnounced announced = 1;
        ServerToManufacturerInvalid invalid = 2;
        ServerToManufacturerNoOffers noOffers = 3;
        ServerToManufacturerSold sold = 4;
    }
}

message ServerToManufacturerAnnounced {
    required string productName = 1;
}

message ServerToManufacturerInvalid {
    optional string errorMessage = 1;
    required string productName = 2;
}

message ServerToManufacturerNoOffers {
    required string productName = 1;
}

message ServerToManufacturerSold {
    required string productName = 1;
    required int32 quantity = 2;
    required float unitPrice = 3;
}

/* -------------------------------------------------------------------------- */
/* importer client <--> server */

message ImporterToServer {
    oneof message {
        ImporterToServerSubscribe subscribe = 1;
        ImporterToServerOffer offer = 2;
    }
}

message ImporterToServerSubscribe {
    repeated string manufacturerNames = 1;
    required string importerName = 2;
}

message ImporterToServerOffer {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 quantity = 3;
    required float unitPrice = 4;
    required string importerName = 5;
}

message ServerToImporter {
    oneof message {
        ServerToImporterOfferSubmitted offerSubmitted = 1;
        ServerToImporterOfferInvalid offerInvalid = 2;
        ServerToImporterOfferWon offerWon = 3;
        ServerToImporterOfferLose offerLose = 4;
        ServerToImporterOfferOutdated offerOutdated = 5;
        ServerToImporterNewProduct newProduct = 6;
    }
}

message ServerToImporterOfferSubmitted {
    required string manufacturerName = 1;
    required string productName = 2;
}

message ServerToImporterOfferInvalid {
    required string manufacturerName = 1;
    required string productName = 2;
    required string errorMessage = 3;
}

message ServerToImporterOfferWon {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 quantity = 3;
    required float unitPrice = 4;
}

message ServerToImporterOfferLose {
    required string manufacturerName = 1;
    required string productName = 2;
}

message ServerToImporterOfferOutdated {
    required string manufacturerName = 1;
    required string productName = 2;
}

message ServerToImporterNewProduct {
    required string productName = 1;
    required int32 minQuantity = 2;
    required int32 maxQuantity = 3;
    required float minUnitPrice = 4;
    required int32 timeout = 5;
    required string manufacturerName = 6;
}

/* -------------------------------------------------------------------------- */
/* arbiter <--> server */

message ArbiterToServer {
    oneof message {
        ArbiterToServerAnnounceAccepted accepted = 1;
        ArbiterToServerAnnounceInvalid announceInvalid = 2;
        ArbiterToServerAnnounceSold sold = 3;
        ArbiterToServerAnnounceNoOffers noOffers = 4;
        ArbiterToServerOfferSubmitted submitted = 5;
        ArbiterToServerOfferInvalid offerInvalid = 6;
        ArbiterToServerOfferWon won = 7;
        ArbiterToServerOfferLose lose = 8;
        ArbiterToServerOfferOutdated offerOutdated = 9;
        ArbiterToServerNewProduct product = 10;
        ArbiterToServerSubscribeAccepted subsAccepted = 11;
    }
}

message ArbiterToServerAnnounceAccepted {
    required string manufacturerName = 1;
    required string productName = 2;
}

message ArbiterToServerAnnounceInvalid {
    required string manufacturerName = 1;
    required string productName = 2;
    required string errorMessage = 3;
}

message ArbiterToServerAnnounceSold {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 quantity = 3;
    required float unitPrice = 4;
}

message ArbiterToServerAnnounceNoOffers {
    required string manufacturerName = 1;
    required string productName = 2;
}

message ArbiterToServerOfferSubmitted {
    required string importerName = 1;
    required string productName = 2;
    required string manufacturerName = 3;
}

message ArbiterToServerOfferInvalid {
    required string importerName = 1;
    required string productName = 2;
    required string manufacturerName = 3;
    required string errorMessage = 4;
}

message ArbiterToServerOfferWon {
    required string importerName = 1;
    required string productName = 2;
    required string manufacturerName = 3;
    required int32 quantity = 4;
    required float unitPrice = 5;
}

message ArbiterToServerOfferLose {
    required string importerName = 1;
    required string productName = 2;
    required string manufacturerName = 3;
}

message ArbiterToServerOfferOutdated {
    required string manufacturerName = 1;
    required string productName = 2;
    required string importerName = 3;
}

message ArbiterToServerNewProduct {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 minQuantity = 3;
    required int32 maxQuantity = 4;
    required float minUnitPrice = 5;
    required int32 timeout = 6;
    required string importerName = 7;
}

message ArbiterToServerSubscribeAccepted {
    required string importerName = 1;
}

message ServerToArbiter {
    oneof message {
        ServerToArbiterOffer offer = 1;
        ServerToArbiterAnnounce announce = 2;
        ServerToArbiterSubscribe subscribe = 3;
    }
}

message ServerToArbiterOffer {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 quantity = 3;
    required float unitPrice = 4;
    required string importerName = 5;
}

message ServerToArbiterAnnounce {
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 minQuantity = 3;
    required int32 maxQuantity = 4;
    required float minUnitPrice = 5;
    required int32 timout = 6;
}

message ServerToArbiterSubscribe {
    required string importerName = 1;
    repeated string manufacturerNames = 2;
}

/* -------------------------------------------------------------------------- */
/* frontend / arbiter <--> catalog */

message ToCatalog {
    oneof message {
        FrontendToCatalogAddUser addUser = 1;
        ArbiterToCatalogAddNegotiation addNegotiation = 2;
        ArbiterToCatalogRemoveNegotiation removeNegotiation = 3;
    }
}

message FrontendToCatalogAddUser
{
    required string username = 1;
    required ClientType type = 2;
}

message ArbiterToCatalogAddNegotiation
{
    required string manufacturerName = 1;
    required string productName = 2;
    required int32 minQuantity = 3;
    required int32 maxQuantity = 4;
    required float minUnitPrice = 5;
}

message ArbiterToCatalogRemoveNegotiation
{
    required string manufacturerName = 1;
    required string productName = 2;
}

/* -------------------------------------------------------------------------- */
