/* -------------------------------------------------------------------------- */

syntax = "proto2";

package nefit;
option java_package = "nefit.shared";
option java_outer_classname = "NefitProto";

/* -------------------------------------------------------------------------- */
/* generic client <--> server */

enum ClientType {
    IMPORTER = 0;
    MANUFACTURER = 1;
}

// request to login using existing account
// (each username is either an importer or a manufacturer)
message ClientToServerLogin {
    required string username = 1;
    required string password = 2;
}

// request to register a new account with the given type
message ClientToServerRegister {
    required string username = 1;
    required string password = 2;

    required ClientType clientType = 3;
}

// response to a login or register request
// (if ok is true, then clientType is present and errorMessage is not)
// (if ok is false, then errorMessage is present and clientType is not)
message ServerToClientAuth {
    required bool ok = 1;
    optional ClientType clientType = 2;
    optional string errorMessage = 3;
}

/* -------------------------------------------------------------------------- */
/* manufacturer client <--> server */

message ManufacturerToServer {
    oneof message {
        ManufacturerToServerAnnounce announce = 1;
    }
}

message ManufacturerToServerAnnounce {
    required string productName = 1;
    required int32 minQuantity = 2;
    required int32 maxQuantity = 3;
    required float minUnitPrice = 4;
    required int32 timeout = 5;
}

message ServerToManufacturer {
    oneof message {
        ServerToManufacturerAnnounced announced = 1;
        ServerToManufacturerInvalid invalid = 2;
        ServerToManufacturerNoOffers noOffers = 3;
        ServerToManufacturerSold sold = 4;
    }
}

message ServerToManufacturerAnnounced {
}

message ServerToManufacturerInvalid {
    optional string errorMessage = 1;
}

message ServerToManufacturerNoOffers {
    required string productName = 1;
}

message ServerToManufacturerSold {
    required string productName = 1;
    required int32 quantity = 2;
    required float unitPrice = 3;
}

/* -------------------------------------------------------------------------- */

message MsgAuth {
    required string name = 1;
    required string pass = 2;

    enum ClientType {
        MANUFACTURER = 0;
        IMPORTER = 1;
    }
    required ClientType ctype = 3;

    enum MsgType {
        LOGIN = 0;
        REGISTER = 1;
    }
    required MsgType mtype = 4 [default = LOGIN];
}

message MsgAck {
    required bool ok = 1;
    optional string msg = 2;
}

message DisponibilityS {
    required string nameM = 1;
    required string nameP = 2;
    required int32 minimum = 3;
    required int32 maximum = 4;
    required float value = 5;
    required int32 period = 6;
}

message DisponibilityN {
    required string nameM = 1;
    required string nameP = 2;
    required int32 minimum = 3;
    required int32 maximum = 4;
    required float value = 5;
    required int32 period = 6;
}

message OrderS {
    required string nameM = 1;
    required string nameP = 2;
    required int32 quant = 3;
    required float value = 4;
    required string nameI = 5;
}

message OrderN {
    required string nameM = 1;
    required string nameP = 2;
    required int32 quant = 3;
    required float value = 4;
    required string nameI = 5;
}

message OrderAckS {
    required bool ack = 1;
    optional string msg = 2;
    required string nameI = 3;
    required bool outdated = 4;
}

message OrderAckI {
    required bool ack = 1;
    optional string msg = 2;
    required bool outdated = 3;
}

message SubS {
    required string nameI = 1;
    repeated string subs = 2;
}

message SubN {
    required string nameI = 1;
    repeated string subs = 2;
}

message ProductionS {
    required string nameM = 1;
    required string nameP = 2;
    required int32 quant = 3;
    required float value = 4;
}

message ProductionM {
    required string nameP = 1;
    required int32 quant = 2;
    required float value = 3;
}

message ResultS {
    required bool result = 1;
    required string msg = 2;
    required string nameI = 3;
}

message ResultI {
    required bool result = 1;
    required string msg = 2;
}

message InfoS {
    required string nameM = 1;
    required string nameP = 2;
    required int32 minimum = 3;
    required int32 maximum = 4;
    required float value = 5;
    required int32 period = 6;
    required string nameI = 7;
}

message InfoI {
    required string nameM = 1;
    required string nameP = 2;
    required int32 minimum = 3;
    required int32 maximum = 4;
    required float value = 5;
    required int32 period = 6;
}

message Server {
    oneof msg {
        DisponibilityS m1 = 1;
        OrderS m2 = 2;
        SubS m3 = 3;
        ResultS m4 = 4;
        InfoS m5 = 5;
        ProductionS m6 = 6;
        OrderAckS m7 = 7;
    }
}

message Importer {
    oneof msg {
        OrderAckI ordack = 1;
        ResultI result = 2;
        InfoI info = 3;
    }
}

message Negotiator {
    oneof msg {
        SubN sub = 1;
        OrderN order = 2;
        DisponibilityN disponibility = 3;
    }
}

/* -------------------------------------------------------------------------- */
