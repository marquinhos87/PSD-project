%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.8.0

-ifndef(nefitproto).
-define(nefitproto, true).

-define(nefitproto_gpb_version, "4.8.0").

-ifndef('CLIENTTOSERVER_PB_H').
-define('CLIENTTOSERVER_PB_H', true).
-record('ClientToServer',
        {message                :: {login, nefitproto:'ClientToServerLogin'()} | {register, nefitproto:'ClientToServerRegister'()} | undefined % oneof
        }).
-endif.

-ifndef('CLIENTTOSERVERLOGIN_PB_H').
-define('CLIENTTOSERVERLOGIN_PB_H', true).
-record('ClientToServerLogin',
        {username               :: iodata(),        % = 1
         password               :: iodata(),        % = 2
         clientType             :: 'IMPORTER' | 'MANUFACTURER' | integer() % = 3, enum ClientType
        }).
-endif.

-ifndef('CLIENTTOSERVERREGISTER_PB_H').
-define('CLIENTTOSERVERREGISTER_PB_H', true).
-record('ClientToServerRegister',
        {username               :: iodata(),        % = 1
         password               :: iodata()         % = 2
        }).
-endif.

-ifndef('SERVERTOCLIENTAUTH_PB_H').
-define('SERVERTOCLIENTAUTH_PB_H', true).
-record('ServerToClientAuth',
        {ok                     :: boolean() | 0 | 1, % = 1
         clientType             :: 'IMPORTER' | 'MANUFACTURER' | integer() | undefined, % = 2, enum ClientType
         errorMessage           :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('MANUFACTURERTOSERVER_PB_H').
-define('MANUFACTURERTOSERVER_PB_H', true).
-record('ManufacturerToServer',
        {message                :: {announce, nefitproto:'ManufacturerToServerAnnounce'()} | undefined % oneof
        }).
-endif.

-ifndef('MANUFACTURERTOSERVERANNOUNCE_PB_H').
-define('MANUFACTURERTOSERVERANNOUNCE_PB_H', true).
-record('ManufacturerToServerAnnounce',
        {productName            :: iodata(),        % = 1
         minQuantity            :: integer(),       % = 2, 32 bits
         maxQuantity            :: integer(),       % = 3, 32 bits
         minUnitPrice           :: float() | integer() | infinity | '-infinity' | nan, % = 4
         timeout                :: integer(),       % = 5, 32 bits
         manufacturerName       :: iodata()         % = 6
        }).
-endif.

-ifndef('SERVERTOMANUFACTURER_PB_H').
-define('SERVERTOMANUFACTURER_PB_H', true).
-record('ServerToManufacturer',
        {message                :: {announced, nefitproto:'ServerToManufacturerAnnounced'()} | {invalid, nefitproto:'ServerToManufacturerInvalid'()} | {noOffers, nefitproto:'ServerToManufacturerNoOffers'()} | {sold, nefitproto:'ServerToManufacturerSold'()} | undefined % oneof
        }).
-endif.

-ifndef('SERVERTOMANUFACTURERANNOUNCED_PB_H').
-define('SERVERTOMANUFACTURERANNOUNCED_PB_H', true).
-record('ServerToManufacturerAnnounced',
        {productName            :: iodata()         % = 1
        }).
-endif.

-ifndef('SERVERTOMANUFACTURERINVALID_PB_H').
-define('SERVERTOMANUFACTURERINVALID_PB_H', true).
-record('ServerToManufacturerInvalid',
        {errorMessage           :: iodata() | undefined, % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('SERVERTOMANUFACTURERNOOFFERS_PB_H').
-define('SERVERTOMANUFACTURERNOOFFERS_PB_H', true).
-record('ServerToManufacturerNoOffers',
        {productName            :: iodata()         % = 1
        }).
-endif.

-ifndef('SERVERTOMANUFACTURERSOLD_PB_H').
-define('SERVERTOMANUFACTURERSOLD_PB_H', true).
-record('ServerToManufacturerSold',
        {productName            :: iodata(),        % = 1
         quantity               :: integer(),       % = 2, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan % = 3
        }).
-endif.

-ifndef('IMPORTERTOSERVER_PB_H').
-define('IMPORTERTOSERVER_PB_H', true).
-record('ImporterToServer',
        {message                :: {subscribe, nefitproto:'ImporterToServerSubscribe'()} | {offer, nefitproto:'ImporterToServerOffer'()} | undefined % oneof
        }).
-endif.

-ifndef('IMPORTERTOSERVERSUBSCRIBE_PB_H').
-define('IMPORTERTOSERVERSUBSCRIBE_PB_H', true).
-record('ImporterToServerSubscribe',
        {manufacturerNames = [] :: [iodata()] | undefined, % = 1
         importerName           :: iodata()         % = 2
        }).
-endif.

-ifndef('IMPORTERTOSERVEROFFER_PB_H').
-define('IMPORTERTOSERVEROFFER_PB_H', true).
-record('ImporterToServerOffer',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         quantity               :: integer(),       % = 3, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan, % = 4
         importerName           :: iodata()         % = 5
        }).
-endif.

-ifndef('SERVERTOIMPORTER_PB_H').
-define('SERVERTOIMPORTER_PB_H', true).
-record('ServerToImporter',
        {message                :: {offerSubmitted, nefitproto:'ServerToImporterOfferSubmitted'()} | {offerInvalid, nefitproto:'ServerToImporterOfferInvalid'()} | {offerWon, nefitproto:'ServerToImporterOfferWon'()} | {offerLose, nefitproto:'ServerToImporterOfferLose'()} | {offerOutdated, nefitproto:'ServerToImporterOfferOutdated'()} | {newProduct, nefitproto:'ServerToImporterNewProduct'()} | undefined % oneof
        }).
-endif.

-ifndef('SERVERTOIMPORTEROFFERSUBMITTED_PB_H').
-define('SERVERTOIMPORTEROFFERSUBMITTED_PB_H', true).
-record('ServerToImporterOfferSubmitted',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('SERVERTOIMPORTEROFFERINVALID_PB_H').
-define('SERVERTOIMPORTEROFFERINVALID_PB_H', true).
-record('ServerToImporterOfferInvalid',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         errorMessage           :: iodata()         % = 3
        }).
-endif.

-ifndef('SERVERTOIMPORTEROFFERWON_PB_H').
-define('SERVERTOIMPORTEROFFERWON_PB_H', true).
-record('ServerToImporterOfferWon',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         quantity               :: integer(),       % = 3, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan % = 4
        }).
-endif.

-ifndef('SERVERTOIMPORTEROFFERLOSE_PB_H').
-define('SERVERTOIMPORTEROFFERLOSE_PB_H', true).
-record('ServerToImporterOfferLose',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('SERVERTOIMPORTEROFFEROUTDATED_PB_H').
-define('SERVERTOIMPORTEROFFEROUTDATED_PB_H', true).
-record('ServerToImporterOfferOutdated',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('SERVERTOIMPORTERNEWPRODUCT_PB_H').
-define('SERVERTOIMPORTERNEWPRODUCT_PB_H', true).
-record('ServerToImporterNewProduct',
        {productName            :: iodata(),        % = 1
         minQuantity            :: integer(),       % = 2, 32 bits
         maxQuantity            :: integer(),       % = 3, 32 bits
         minUnitPrice           :: float() | integer() | infinity | '-infinity' | nan, % = 4
         timeout                :: integer(),       % = 5, 32 bits
         manufacturerName       :: iodata()         % = 6
        }).
-endif.

-ifndef('ARBITERTOSERVER_PB_H').
-define('ARBITERTOSERVER_PB_H', true).
-record('ArbiterToServer',
        {message                :: {accepted, nefitproto:'ArbiterToServerAnnounceAccepted'()} | {announceInvalid, nefitproto:'ArbiterToServerAnnounceInvalid'()} | {sold, nefitproto:'ArbiterToServerAnnounceSold'()} | {noOffers, nefitproto:'ArbiterToServerAnnounceNoOffers'()} | {submitted, nefitproto:'ArbiterToServerOfferSubmitted'()} | {offerInvalid, nefitproto:'ArbiterToServerOfferInvalid'()} | {won, nefitproto:'ArbiterToServerOfferWon'()} | {lose, nefitproto:'ArbiterToServerOfferLose'()} | {offerOutdated, nefitproto:'ArbiterToServerOfferOutdated'()} | {product, nefitproto:'ArbiterToServerNewProduct'()} | {subsAccepted, nefitproto:'ArbiterToServerSubscribeAccepted'()} | undefined % oneof
        }).
-endif.

-ifndef('ARBITERTOSERVERANNOUNCEACCEPTED_PB_H').
-define('ARBITERTOSERVERANNOUNCEACCEPTED_PB_H', true).
-record('ArbiterToServerAnnounceAccepted',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('ARBITERTOSERVERANNOUNCEINVALID_PB_H').
-define('ARBITERTOSERVERANNOUNCEINVALID_PB_H', true).
-record('ArbiterToServerAnnounceInvalid',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         errorMessage           :: iodata()         % = 3
        }).
-endif.

-ifndef('ARBITERTOSERVERANNOUNCESOLD_PB_H').
-define('ARBITERTOSERVERANNOUNCESOLD_PB_H', true).
-record('ArbiterToServerAnnounceSold',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         quantity               :: integer(),       % = 3, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan % = 4
        }).
-endif.

-ifndef('ARBITERTOSERVERANNOUNCENOOFFERS_PB_H').
-define('ARBITERTOSERVERANNOUNCENOOFFERS_PB_H', true).
-record('ArbiterToServerAnnounceNoOffers',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata()         % = 2
        }).
-endif.

-ifndef('ARBITERTOSERVEROFFERSUBMITTED_PB_H').
-define('ARBITERTOSERVEROFFERSUBMITTED_PB_H', true).
-record('ArbiterToServerOfferSubmitted',
        {importerName           :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         manufacturerName       :: iodata()         % = 3
        }).
-endif.

-ifndef('ARBITERTOSERVEROFFERINVALID_PB_H').
-define('ARBITERTOSERVEROFFERINVALID_PB_H', true).
-record('ArbiterToServerOfferInvalid',
        {importerName           :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         manufacturerName       :: iodata(),        % = 3
         errorMessage           :: iodata()         % = 4
        }).
-endif.

-ifndef('ARBITERTOSERVEROFFERWON_PB_H').
-define('ARBITERTOSERVEROFFERWON_PB_H', true).
-record('ArbiterToServerOfferWon',
        {importerName           :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         manufacturerName       :: iodata(),        % = 3
         quantity               :: integer(),       % = 4, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan % = 5
        }).
-endif.

-ifndef('ARBITERTOSERVEROFFERLOSE_PB_H').
-define('ARBITERTOSERVEROFFERLOSE_PB_H', true).
-record('ArbiterToServerOfferLose',
        {importerName           :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         manufacturerName       :: iodata()         % = 3
        }).
-endif.

-ifndef('ARBITERTOSERVEROFFEROUTDATED_PB_H').
-define('ARBITERTOSERVEROFFEROUTDATED_PB_H', true).
-record('ArbiterToServerOfferOutdated',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         importerName           :: iodata()         % = 3
        }).
-endif.

-ifndef('ARBITERTOSERVERNEWPRODUCT_PB_H').
-define('ARBITERTOSERVERNEWPRODUCT_PB_H', true).
-record('ArbiterToServerNewProduct',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         minQuantity            :: integer(),       % = 3, 32 bits
         maxQuantity            :: integer(),       % = 4, 32 bits
         minUnitPrice           :: float() | integer() | infinity | '-infinity' | nan, % = 5
         timeout                :: integer(),       % = 6, 32 bits
         importerName           :: iodata()         % = 7
        }).
-endif.

-ifndef('ARBITERTOSERVERSUBSCRIBEACCEPTED_PB_H').
-define('ARBITERTOSERVERSUBSCRIBEACCEPTED_PB_H', true).
-record('ArbiterToServerSubscribeAccepted',
        {importerName           :: iodata()         % = 1
        }).
-endif.

-ifndef('SERVERTOARBITER_PB_H').
-define('SERVERTOARBITER_PB_H', true).
-record('ServerToArbiter',
        {message                :: {offer, nefitproto:'ServerToArbiterOffer'()} | {announce, nefitproto:'ServerToArbiterAnnounce'()} | {subscribe, nefitproto:'ServerToArbiterSubscribe'()} | undefined % oneof
        }).
-endif.

-ifndef('SERVERTOARBITEROFFER_PB_H').
-define('SERVERTOARBITEROFFER_PB_H', true).
-record('ServerToArbiterOffer',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         quantity               :: integer(),       % = 3, 32 bits
         unitPrice              :: float() | integer() | infinity | '-infinity' | nan, % = 4
         importerName           :: iodata()         % = 5
        }).
-endif.

-ifndef('SERVERTOARBITERANNOUNCE_PB_H').
-define('SERVERTOARBITERANNOUNCE_PB_H', true).
-record('ServerToArbiterAnnounce',
        {manufacturerName       :: iodata(),        % = 1
         productName            :: iodata(),        % = 2
         minQuantity            :: integer(),       % = 3, 32 bits
         maxQuantity            :: integer(),       % = 4, 32 bits
         minUnitPrice           :: float() | integer() | infinity | '-infinity' | nan, % = 5
         timout                 :: integer()        % = 6, 32 bits
        }).
-endif.

-ifndef('SERVERTOARBITERSUBSCRIBE_PB_H').
-define('SERVERTOARBITERSUBSCRIBE_PB_H', true).
-record('ServerToArbiterSubscribe',
        {importerName           :: iodata(),        % = 1
         manufacturerNames = [] :: [iodata()] | undefined % = 2
        }).
-endif.

-endif.
